function [img1, img2, img3, img4, img5, img6, pos1, pos2] = getLetters(img)
%Set default
img1 = 0;
img2 = 0;
img3 = 0;
img4 = 0;
img5 = 0;
img6 = 0;
pos1 = 0;
pos2 = 0;

%Make grayscale image
img = rgb2gray(img);

%Make binary image
bw = imbinarize(img,'adaptive','ForegroundPolarity','dark','Sensitivity',0.5);

%Inverse binary image
bw = imcomplement(bw);

%Get all areas
st = regionprops(bw, 'Area', 'BoundingBox'); 
areas = [st.Area]; %Into array
current = 1;
while current ~= 7
    [~,n] = max( areas ); %Get the biggest area
    areas(n) = 0; %Set 0 for that position so we can get the second biggest area next time
    array = [st.BoundingBox]; %Get the coordinates of that area
    begin = n + (3*(n-1));
    z = 0;
    %If scale is ok, crop the image
    if (array(begin+3)/array(begin+2)) > 1 && (array(begin+3)/array(begin+2)) < 3
        rect = [array(begin)+z array(begin+1)+z array(begin+2)+z array(begin+3)+z];
        %Crop the image to the plate
        start(current) = array(begin);
        ending(current) = array(begin+1);
        width(current) = array(begin+2);
        height(current) = array(begin+3);
        previous = array(begin);
        current = current + 1;
    end
end
for p=1:6
    [~,k] = min(start);
    if p == 1
        img1 = imcrop(img, [start(k) ending(k) width(k) height(k)]);
    elseif p == 2
        img2 = imcrop(img, [start(k) ending(k) width(k) height(k)]);
    elseif p == 3
        img3 = imcrop(img, [start(k) ending(k) width(k) height(k)]);
    elseif p == 4
        img4 = imcrop(img, [start(k) ending(k) width(k) height(k)]);
    elseif p == 5
        img5 = imcrop(img, [start(k) ending(k) width(k) height(k)]);
    elseif p == 6
        img6 = imcrop(img, [start(k) ending(k) width(k) height(k)]);
    end
    start(k) = intmax;
end


end